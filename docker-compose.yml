services:
  frontend:
    build: ./come-front
    container_name: come-front
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    build: ./come-back
    container_name: come-back
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./.env:/app/.env
      - ./uploads:/app/uploads
    environment:
      - MYSQL_DSN=${MYSQL_DSN}
      - REDIS_ADDR=${REDIS_ADDR}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
  
  chat-service:
    build: ./come-back/chat-service
    container_name: chat-service
    restart: always
    ports:
      - "8083:8083"
    volumes:
      - ./.env:/app/.env
    environment:
      - MYSQL_DSN=${MYSQL_DSN}
      - REDIS_ADDR=${REDIS_ADDR}
      - CHAT_PORT=8083
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started

  mysql:
    image: mysql:8.0
    container_name: come-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE} 
      MYSQL_TZINFO_TO_SQL: "false"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -u root -p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 10s
      retries: 10

  redis:
    image: redis:7.0-alpine
    container_name: come-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  mysql_data:
  redis_data:

